cassius154@users.noreply.github.com

Уровеень 1
https://gb.ru/courses/55

==========================================================================
Урок 1
https://gb.ru/lessons/162054
https://docs.google.com/document/d/1waAexISKMLNlUE8fazjCzubdNdP2Higp9XK7KH69Alk/edit#heading=h.gjdgxs

1:32:25		- Объяснения про git, branches и pull request


==========================================================================
Урок 2
https://gb.ru/lessons/162055
https://docs.google.com/document/d/1zp7BXqhlI5hWmhUPkztmne2ldiXZao0U8IgMsvorEZk/edit


0:56:55		- восстановление клиентских библиотек при сборке, создание и изменение .gitignore
2:03:26		- публикация приложения



==========================================================================
Урок 3
https://gb.ru/lessons/162056
https://docs.google.com/document/d/1ioDDbw2LMlYCqGR6t3RwLAqsofKSexqcympk3xHX4kw/edit


0:21:12		- схема обработки запроса в ASP.NET Core


Вопросы:
Почему при задании атрибутов роутинга в котроллере [action] в [], а {id} в {}
[Route("Staff/[action]/{id?}")]



==========================================================================
Урок 4
https://gb.ru/lessons/162057
https://docs.google.com/document/d/1qVYrH8BslGjz9KriQCGBcu8ce41X1kJQCDiS-tW0IRI/edit


1:00:27		- альтернативный способ живого изменения проекта без перекомпиляции (dotnet watch run)



==========================================================================
Урок 5
https://gb.ru/lessons/162058
https://docs.google.com/document/d/1xmamONBG7T83AyaYb5wLZBYEu2jL5NZfYp7xcR0s5Og/edit

0:48:00		- про миграции (теория)
1:39:10		- идентификационные таблицы
1:42:07		- про миграции (практика)
2:20:55		- где в отладке смотреть строку запроса в IQueryable

  
==========================================================================
Урок 6
https://gb.ru/lessons/162059
https://docs.google.com/document/d/1JFKb__4HCoM8KAxrQuTFTarTtSiEYn39a4t9-bVPXQ0/edit

==========================================================================
Урок 7
https://gb.ru/lessons/162060
https://docs.google.com/document/d/1MJ3jUAju1CfmYTaxcV43-KcJJYIyNHhjBIhgDiv0D1Q/edit



==========================================================================
Урок 8
https://gb.ru/lessons/162061
https://docs.google.com/document/d/13wfIzCG8zjZHe9ZotFzAi_g0khMsbSOWjb7L_7fwpwY/edit


1:00:50		- DateTimeOffset

2:18:26		- Deploying (в том числе Azure)
2:23:45		- Про SqlLite

Вопросы
Почему использовали DateTimeOffset.UtcNow? Тогда ничем не отличается от обычного DateTime.UtcNow или DateTime.Now.ToUniversalTime() - идет время Utc с нулевым смещением, и непонятно, какое же время было реально.
Если же использовать DateTimeOffset.Now - получается местное время + смещение (19:00 +3:00)

У меня вышло, что в _UserProfileLayout использовать родительский _Layout обязательно - иначе ни стилей, ни скриптов





Сертификат
https://gb.ru/certificates/1418718



Уровень 2
https://gb.ru/courses/306

==========================================================================
Урок 1

https://gb.ru/lessons/180788

Вопрос про Location в CreateAtAction


==========================================================================
Урок 2
https://gb.ru/lessons/180789

0:30:10		- Про POST
(POST можно использовать и для получения данных - в случае сложных даннаых или в случае необходимости скрыть какие-то данные)


Вопросы
"При работе с DTO очень пригодятся records" - все-таки, каким образом? Мы же при маппинге оперируем с разными классами?
//имеется ввиду использование позиционных records (record Entity(type field1, type field2 и т.д.))


==========================================================================
Урок 3
https://gb.ru/lessons/180790




Вопросы
Автоматическая реалзация клиентов с помощью Swagger

==========================================================================
Урок 4
https://gb.ru/lessons/180791




==========================================================================
Урок 5
https://gb.ru/lessons/180792

1:28:50  - модульное тестирование на GitHub
2:32:52  - добавление плашки с результатами тестирования на GitHub




==========================================================================
Урок 6
https://gb.ru/lessons/180793


https://docs.microsoft.com/ru-ru/aspnet/core/test/integration-tests?view=aspnetcore-5.0 - интеграционные тесты
https://habr.com/ru/post/273807/  - библиотеки для парсинга HTML
https://youtu.be/u9i2vc-FetE  тут про Automapper что-то есть



0:21:45  - настройка GitHub на проверку обновления пакетов
2:18:43  - пакеты/middleware для создания SiteMap

Сайт getootstrap.com - оттуда можно качать макеты сайтов (раздел Examples/Snippets (отдельные части) или Examples/CustomComponents (целые макеты))

==========================================================================
Урок 7
https://gb.ru/lessons/180794

https://habr.com/ru/company/dododev/blog/503376/   //повышение надежности клиентов для отказоустойчивого взаимодействия с WebAPI-сервисами

https://github.com/Infarh/SportsStore/blob/dev/UI/SportsStore/Views/Catalog/Partial/_Pagination.cshtml  //пример пейджинга на основе частичного представления 


0:43:26  - генерация клиентов WebAPI с помощью swagger


http://localhost:5001/swagger/v1/swagger.json


где-то тут про SignalR как платформа вместо типа аякса или что-то в этом роде
нет, это в Blazor :)
это 2 варианта Blazor - webasm и второй как раз

==========================================================================
Урок 8
https://gb.ru/lessons/180795


в 7-м уроке смотреть, где идет минификация cartlogic.js



1:03:45  - unobtrusive validation
